{
  "name": "grunt-util",
  "description": "Collection of grunt utility methods",
  "version": "0.3.1",
  "author": {
    "name": "Min Hur",
    "email": "minhur@gmail.com"
  },
  "dependencies": {},
  "devDependencies": {},
  "keywords": [
    "gruntutil",
    "grunt util",
    "grunt-util"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/minhur/grunt-util.git"
  },
  "main": "lib/grunt-util.js",
  "engines": {
    "node": "*"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/minhur/grunt-util/blob/master/LICENSE"
    }
  ],
  "readme": "grunt-util\n==========\n\n> A collection of grunt utility methods\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-util --save-dev\n```\n\nOnce the plugin has been installed, require it inside your tasks\n\n```js\nmodule.exports = function(grunt) {\n var util = require('grunt-util')(grunt);\n  util.log( { hello: 'world' } );\n}\n```\n\n## Methods\n\n### log\n\n> Logs your message, prettifying them if they're objects\n\n```js\nutil.log({ foo: 'bar' });\n```\n\n### logConfig([prop])\n\n> Logs prop's grunt config. If prop is ommitted, project's grunt config is logged.  \n> Check [grunt.config](http://gruntjs.com/api/grunt.config#grunt.config) for details.\n\n```js\nutil.logConfig('clean');\n```\n\n### extendConfig(config)\n\n> Extends project's grunt config after initialization. Useful for extending existing config from external tasks.  \n> Check <http://lodash.com/docs#forEach> for details.\n\n*Gruntfile.js*\n```js\nmodule.exports = function(grunt) {\n grunt.initConfig({\n    pkg: grunt.file.readJSON('package.json')\n  });\n grunt.loadTasks('tasks');\n};\n```\n\n*tasks/clean.js*\n```js\nmodule.exports = function(grunt) {\n var util = require('grunt-util')(grunt);\n  util.extendConfig({\n   clean: {\n      dist: ['dist']\n    }\n });\n};\n```\n\n### mergeConfig(config)\n\n> Same thing as extend config but deep merges with existing config.  \n> Check <http://lodash.com/docs#merge> for details.\n\n### template(templateObj, dataObj)\n\n> Converts templateObj with dataObj values using grunt.template.  \n> Check <http://gruntjs.com/api/grunt.template> for deatils.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/minhur/grunt-util/issues"
  },
  "_id": "grunt-util@0.3.0",
  "_from": "grunt-util@~0.3.0",
  "dist": {
    "shasum": "2ed77acc9ee8584b78fde4d61cbf203d1794f19c"
  },
  "_resolved": "https://registry.npmjs.org/grunt-util/-/grunt-util-0.2.1.tgz"
}
